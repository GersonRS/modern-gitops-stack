{{- if index .Values "cert-manager" "prometheus" "servicemonitor" "enabled" }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $.Release.Name }}-prometheus-rules
  labels:
    name: {{ $.Release.Name }}-prometheus-rules
spec:
  groups:
  - name: cert-manager
    rules:
    - alert: CertManagerCertExpirySoon
      annotations:
        description: {{"The domain that this certificate covers will be unavailable after {{ $value | humanizeDuration }}. Clients using endpoints that this certificate protects will start to fail in {{ $value | humanizeDuration }}."}}
        summary: {{"The certificate '{{ $labels.name }}' is {{ $value | humanizeDuration }} from expiry, it should have renewed over a week ago."}}
      expr: |
        avg by (exported_namespace, namespace, name) (
          certmanager_certificate_expiration_timestamp_seconds - time()
        ) < (21 * 24 * 3600) # 21 days in seconds
      for: 1h
      labels:
        severity: warning
    - alert: CertManagerCertExpiryIminent
      annotations:
        description: {{"The domain that this certificate covers will be unavailable after {{ $value | humanizeDuration }}. Clients using endpoints that this certificate protects will start to fail in {{ $value | humanizeDuration }}."}}
        summary: {{"The certificate '{{ $labels.name }}' is {{ $value | humanizeDuration }} from expiry, it should have renewed over a month ago."}}
      expr: |
        avg by (exported_namespace, namespace, name) (
          certmanager_certificate_expiration_timestamp_seconds - time()
        ) < (7 * 24 * 3600) # 7 days in seconds
      for: 1h
      labels:
        severity: critical
    - alert: CertManagerCertNotReady
      annotations:
        description: "This certificate has not been ready to serve traffic for at least 10 min. If the certificate is being renewed or there is another valid certificate, the ingress controller _may_ be able to serve that instead."
        summary: {{"The certificate '{{ $labels.name }}' is not ready to serve traffic."}}
      expr: |
        max by (name, exported_namespace, namespace, condition) (
          certmanager_certificate_ready_status{condition!="True"} == 1
        )
      for: 10m
      labels:
        severity: critical
    - alert: CertManagerHittingRateLimits
      annotations:
        description: "Depending on the rate limit, cert-manager may be unable to generate certificates for up to a week."
        summary: "Cert-manager is hitting Let's Encrypt rate limits."
      expr: |
        sum by (host) (
          rate(certmanager_http_acme_client_request_count{status="429"}[5m])
        ) > 0
      for: 5m
      labels:
        severity: critical
{{- end }}
